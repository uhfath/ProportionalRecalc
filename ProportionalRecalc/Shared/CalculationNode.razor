@inherits ComponentBase

<table class="table table-striped table-hover table-sm w-auto shadow rounded bg-body">
	<thead class="table-light">
		<tr>
			<th scope="col" colspan="2" class="align-bottom">
				<button class="btn btn-sm btn-danger w-100" @onclick="OnCalculationDelete" title="Удалить расчёт" tabindex="-1">Удалить</button>
			</th>
			<th scope="col" class="align-top">
				<div class="d-flex align-items-baseline">
					<span>Исходные данные</span>
					<button type="button" class="btn btn-link btn-sm" title="Вставить значения из буфера обмена" tabindex="-1"><i class="bi bi-clipboard-data"></i></button>
				</div>
				<InputDecimal IsReadOnly="true" placeholder="Исходная сумма..." Value="Calculation.SourceSum" />
			</th>

			@for (var i = 0; i < Calculation.Destinations.Count; i++)
			{
				var currentIndex = i;
				<th scope="col" class="align-top">
					<div class="d-flex align-items-baseline">
						<span>Результат@(Calculation.Destinations.Count == 1 ? "" : $" №{i + 1}")</span>
						<button type="button" class="btn btn-link btn-sm" title="Скопировать новые результаты в буфер обмена" tabindex="-1"><i class="bi bi-files"></i></button>
						<button type="button" @onclick="() => OnColumnAdd.InvokeAsync(currentIndex)" class="btn btn-link link-success btn-sm ms-auto" title="Добавить новый столбец" tabindex="-1"><i class="bi bi-plus-lg"></i></button>

						@if (Calculation.Destinations.Count > 1)
						{
							<button type="button" @onclick="() => OnColumnRemove.InvokeAsync(currentIndex)" class="btn btn-link link-danger btn-sm" title="Удалить столбец" tabindex="-1"><i class="bi bi-trash-fill"></i></button>
						}
					</div>
					<InputDecimal placeholder="Новая сумма..." Value="Calculation.Destinations[i].TargetSum" OnChanged="e => OnTargetSumChanged(currentIndex, e)" />
				</th>
			}
		</tr>
	</thead>
	<tbody>
		@for (var i = 0; i < Calculation.Source.Count; i++)
		{
			var currentIndex = i;
			<tr>
				<td scope="row" class="align-middle">
					<button class="cell-hover btn btn-sm btn-link link-success" @onclick="() => OnRowInsert.InvokeAsync(currentIndex)" title="Добавить строку" tabindex="-1"><i class="bi bi-plus-lg"></i></button>

					@if (Calculation.Source.Count > 1)
					{
						<button class="cell-hover btn btn-sm btn-link link-danger" @onclick="() => OnRowRemove.InvokeAsync(currentIndex)" title="Удалить строку" tabindex="-1"><i class="bi bi-trash-fill"></i></button>
					}
				</td>
				<td scope="row" class="align-middle">@(i + 1)</td>
				<td scope="row" class="align-middle">
					<InputDecimal
									Value="Calculation.Source[i]"
									OnChanged="e => OnCellChanged(currentIndex, e)"
									OnRowInsertShortcut="() => OnRowInsert.InvokeAsync(currentIndex)"
									placeholder="Исходное значение..." />
				</td>

				@for (var j = 0; j < Calculation.Destinations.Count; j++)
				{
					<td scope="row" class="align-middle">
						<InputDecimal Value="Calculation.Destinations[j].Values[i]"
										IsReadOnly="true"
										tabindex="-1"
										placeholder="Новое значение..." />
					</td>
				}
			</tr>
		}
	</tbody>
</table>
